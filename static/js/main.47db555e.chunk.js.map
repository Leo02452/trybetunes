{"version":3,"sources":["services/userAPI.js","components/Loading.js","pages/Login.js","components/Footer.js","components/Header.js","services/searchAlbumsAPI.js","pages/Search.js","services/musicsAPI.js","services/favoriteSongsAPI.js","components/MusicCard.js","pages/Album.js","pages/Favorites.js","pages/Profile.js","pages/ProfileEdit.js","pages/NotFound.js","App.js","index.js"],"names":["USER_KEY","saveUser","user","localStorage","setItem","JSON","stringify","simulateRequest","response","callback","setTimeout","getUser","Promise","resolve","parse","getItem","createUser","name","email","image","description","updateUser","updatedUser","Loading","className","Component","Login","handleChange","target","setState","value","state","isButtonDisabled","length","handleLogin","event","a","preventDefault","loading","login","this","placeholder","onChange","type","disabled","onClick","to","Footer","Header","fetchUser","userName","componentDidMount","searchAlbumsAPI","artist","artistNameURL","encodeURI","replaceAll","getAlbumsAPI","fetch","APIResponse","json","results","map","artistId","artistName","collectionId","collectionName","collectionPrice","artworkUrl100","releaseDate","trackCount","Search","handleSearch","albums","fetchAlbum","searchedArtist","album","src","alt","getMusics","id","request","requestJson","FAVORITE_SONGS_KEY","readFavoriteSongs","saveFavoriteSongs","favoriteSongs","getFavoriteSongs","addSong","song","removeSong","filter","s","trackId","MusicCard","props","favoritesSongsList","isFavoriteSong","handleCheck","trackInfo","onFavoriteChange","checked","isFavorite","some","favoriteSong","trackName","previewUrl","controls","kind","htmlFor","defaultProps","Album","match","params","tracks","track","index","Favorites","handleUpdate","Profile","ProfileEdit","handleVerification","prevState","isUserNameEmpty","isUserEmailEmpty","isUserDescriptionEmpty","isUserImageEmpty","isButtonEnabled","handleClick","isUpdated","NotFound","App","path","component","exact","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47db555e.chunk.js","sourcesContent":["const USER_KEY = 'user';\nconst TIMEOUT = 1500;\nconst SUCCESS_STATUS = 'OK';\n\nconst readUser = () => JSON.parse(localStorage.getItem(USER_KEY));\nconst saveUser = (user) => localStorage.setItem(USER_KEY, JSON.stringify(user));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso mais futuramente\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getUser = () => new Promise((resolve) => {\n  let user = readUser();\n  if (user === null) {\n    user = {};\n  }\n  simulateRequest(user)(resolve);\n});\n\nexport const createUser = (user) => new Promise((resolve) => {\n  const emptyUser = {\n    name: '',\n    email: '',\n    image: '',\n    description: '',\n  };\n  saveUser({ ...emptyUser, ...user });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const updateUser = (updatedUser) => new Promise((resolve) => {\n  saveUser({ ...updatedUser });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import React, { Component } from 'react';\n\nclass Loading extends Component {\n  render() {\n    return (\n      <span className=\"loading\">Loading...</span>\n    );\n  }\n}\n\nexport default Loading;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { createUser } from '../services/userAPI';\nimport Loading from '../components/Loading';\nimport './Login.css';\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      isButtonDisabled: true,\n      loading: false,\n      login: false,\n    };\n  }\n\n  handleChange = ({ target }) => {\n    const minCharacter = 3;\n    this.setState({ name: target.value }, () => {\n      const { name } = this.state;\n      this.setState({\n        isButtonDisabled: minCharacter > name.length });\n    });\n  }\n\n  // Ajuda do Imar Mendes - T19A com a lógica de Loading e Redirect\n  handleLogin = async (event) => {\n    event.preventDefault();\n    const { name } = this.state;\n    this.setState({ loading: true });\n    await createUser({ name });\n    this.setState({ loading: false, login: true });\n  }\n\n  render() {\n    const { isButtonDisabled, loading, login } = this.state;\n    return (\n      <div data-testid=\"page-login\">\n        {loading\n          ? <Loading />\n          : (\n            <form className=\"login-form\">\n              <input\n                data-testid=\"login-name-input\"\n                name=\"name\"\n                className=\"login-input\"\n                placeholder=\"Enter your username\"\n                onChange={ this.handleChange }\n              />\n              <button\n                data-testid=\"login-submit-button\"\n                type=\"submit\"\n                className=\"login-button\"\n                disabled={ isButtonDisabled }\n                onClick={ this.handleLogin }\n              >\n                Enter\n              </button>\n            </form>\n          )}\n        { login && <Redirect to=\"/search\" /> }\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport './Footer.css';\n\nclass Footer extends Component {\n  render() {\n    return (\n      <footer className=\"footer-container\">\n        <span\n          className=\"footer-title\"\n        >\n          Desenvolvido por Leo Araujo com React e muita paciência.\n        </span>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getUser } from '../services/userAPI';\nimport Loading from './Loading';\nimport './Header.css';\n\nclass Header extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: true,\n      userName: '',\n    };\n  }\n\n  fetchUser = async () => {\n    this.setState({ loading: true });\n    const user = await getUser();\n    this.setState({ loading: false, userName: user.name });\n  }\n\n  componentDidMount = async () => {\n    await this.fetchUser();\n  }\n\n  render() {\n    const { loading, userName } = this.state;\n    return (\n      <header data-testid=\"header-component\" className=\"header-container\">\n        {\n          loading\n            ? <Loading />\n            : (\n              <span\n                data-testid=\"header-user-name\"\n                className=\"user-name\"\n              >\n                { userName }\n              </span>\n            )\n        }\n        <nav className=\"nav-container\">\n          <Link\n            to=\"/search\"\n            data-testid=\"link-to-search\"\n            className=\"nav-link\"\n          >\n            Search\n          </Link>\n          <Link\n            to=\"/favorites\"\n            data-testid=\"link-to-favorites\"\n            className=\"nav-link\"\n          >\n            Favorites\n          </Link>\n          <Link\n            to=\"/profile\"\n            data-testid=\"link-to-profile\"\n            className=\"nav-link\"\n          >\n            Profile\n          </Link>\n        </nav>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","const searchAlbumsAPI = async (artist) => {\n  const artistNameURL = encodeURI(artist).replaceAll('%20', '+');\n\n  const getAlbumsAPI = `https://itunes.apple.com/search?entity=album&term=${artistNameURL}&attribute=allArtistTerm`;\n\n  const APIResponse = await fetch(getAlbumsAPI);\n\n  const { results } = await APIResponse.json();\n\n  const response = results.map(\n    ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }) => ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }),\n  );\n  return response;\n};\n\nexport default searchAlbumsAPI;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport searchAlbumsAPI from '../services/searchAlbumsAPI';\nimport './Search.css';\n\nclass Search extends Component {\n  constructor() {\n    super();\n    this.state = {\n      artist: '',\n      searchedArtist: '',\n      isButtonDisabled: true,\n      loading: false,\n      fetchAlbum: false,\n      albums: [],\n    };\n  }\n\n  handleChange = ({ target }) => {\n    const minCharacter = 2;\n    this.setState({ artist: target.value }, () => {\n      const { artist } = this.state;\n      this.setState({\n        isButtonDisabled: minCharacter > artist.length });\n    });\n  }\n\n  handleSearch = async () => {\n    this.setState({ loading: true });\n    const { artist } = this.state;\n    const albums = await searchAlbumsAPI(artist);\n    this.setState({ loading: false, fetchAlbum: true, albums, searchedArtist: artist });\n    this.setState({ artist: '' });\n  }\n\n  render() {\n    const { artist, isButtonDisabled, loading,\n      fetchAlbum, albums, searchedArtist } = this.state;\n    return (\n      <div data-testid=\"page-search\">\n        <Header />\n        {loading\n          ? <Loading />\n          : (\n            <form className=\"search-artist-form\">\n              <input\n                type=\"text\"\n                data-testid=\"search-artist-input\"\n                name=\"search-artist-input\"\n                placeholder=\"Search an artist\"\n                className=\"search-artist-input\"\n                value={ artist }\n                onChange={ this.handleChange }\n              />\n              <button\n                type=\"button\"\n                data-testid=\"search-artist-button\"\n                className=\"search-artist-button\"\n                disabled={ isButtonDisabled }\n                onClick={ this.handleSearch }\n              >\n                Search\n              </button>\n            </form>\n          )}\n        { fetchAlbum\n            && (\n              <>\n                <span className=\"search-result-title\">\n                  Found albuns of:\n                  {' '}\n                  { searchedArtist }\n                </span>\n                <section className=\"albuns-container\">\n                  { albums.length === 0\n                    ? 'Nenhum álbum foi encontrado'\n                    : (\n                      albums.map((album) => (\n                        <Link\n                          key={ album.collectionId }\n                          data-testid={ `link-to-album-${album.collectionId}` }\n                          to={ `/album/${album.collectionId}` }\n                          className=\"album-card\"\n                        >\n                          <img\n                            src={ album.artworkUrl100 }\n                            alt={ `album ${album.collectionName}` }\n                          />\n                          <span>{ album.collectionName }</span>\n                        </Link>\n                      ))\n                    )}\n                </section>\n              </>\n            )}\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","const getMusics = async (id) => {\n  const request = await fetch(`https://itunes.apple.com/lookup?id=${id}&entity=song`);\n  const requestJson = await request.json();\n  return requestJson.results;\n};\n\nexport default getMusics;\n","const FAVORITE_SONGS_KEY = 'favorite_songs';\nconst TIMEOUT = 500;\nconst SUCCESS_STATUS = 'OK';\n\nif (!JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY))) {\n  localStorage.setItem(FAVORITE_SONGS_KEY, JSON.stringify([]));\n}\nconst readFavoriteSongs = () => JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY));\n\nconst saveFavoriteSongs = (favoriteSongs) => localStorage\n  .setItem(FAVORITE_SONGS_KEY, JSON.stringify(favoriteSongs));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso futuramente .\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getFavoriteSongs = () => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  simulateRequest(favoriteSongs)(resolve);\n});\n\nexport const addSong = (song) => new Promise((resolve) => {\n  if (song) {\n    const favoriteSongs = readFavoriteSongs();\n    saveFavoriteSongs([...favoriteSongs, song]);\n  }\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const removeSong = (song) => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  saveFavoriteSongs(favoriteSongs.filter((s) => s.trackId !== song.trackId));\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { MdOutlineAddCircle, MdOutlineRemoveCircle } from 'react-icons/md';\nimport { addSong, getFavoriteSongs, removeSong } from '../services/favoriteSongsAPI';\nimport Loading from './Loading';\nimport './MusicCard.css';\n\nclass MusicCard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      trackInfo: props.trackInfo,\n      favoritesSongsList: [],\n      isFavorite: false,\n    };\n  }\n\n  componentDidMount = async () => {\n    const { trackId } = this.props;\n    this.setState({ loading: true });\n    const favoritesSongsList = await getFavoriteSongs();\n    this.setState({ loading: false, favoritesSongsList },\n      () => this.isFavoriteSong(trackId));\n  }\n\n  handleCheck = async ({ target }) => {\n    const { trackInfo } = this.state;\n    const { onFavoriteChange } = this.props;\n    this.setState({ loading: true });\n    if (target.checked) {\n      // Ajuda de Thiago Medeiros - T19A com a lógica de mudar o isFavorite no click\n      this.setState({ isFavorite: true });\n      await addSong(trackInfo);\n    } else {\n      this.setState({ isFavorite: false });\n      await removeSong(trackInfo);\n    }\n    this.setState({ loading: false });\n    onFavoriteChange();\n  }\n\n  isFavoriteSong = (id) => {\n    const { favoritesSongsList } = this.state;\n    this.setState({\n      isFavorite: favoritesSongsList.some((favoriteSong) => (\n        favoriteSong.trackId === id)),\n    });\n  }\n\n  render() {\n    const { trackName, previewUrl, trackId } = this.props;\n    const { loading, isFavorite } = this.state;\n    return (\n      <div className=\"music-card\">\n        <h3>{ trackName }</h3>\n        <div className=\"music\">\n          <audio data-testid=\"audio-component\" src={ previewUrl } controls>\n            <track kind=\"captions\" />\n            O seu navegador não suporta o elemento\n            <code>audio</code>\n          </audio>\n          <label\n            htmlFor={ trackId }\n          >\n            {/* { Ajuda da Wanny - T19A com a lógica de substituir o icon pelo checkbox sem perder toda a lógica } */}\n            { isFavorite\n              ? (\n                <MdOutlineRemoveCircle\n                  className=\"fav-icon\"\n                />)\n              : (\n                <MdOutlineAddCircle\n                  className=\"fav-icon\"\n                />)}\n            {loading && <Loading />}\n            <input\n              data-testid={ `checkbox-music-${trackId}` }\n              type=\"checkbox\"\n              name={ `checkbox-music-${trackId}` }\n              id={ trackId }\n              className=\"checkbox-input\"\n              checked={ isFavorite }\n              onChange={ this.handleCheck }\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nMusicCard.defaultProps = {\n  onFavoriteChange: () => {},\n};\n\nMusicCard.propTypes = {\n  trackName: PropTypes.string.isRequired,\n  previewUrl: PropTypes.string.isRequired,\n  trackId: PropTypes.number.isRequired,\n  // Solução vista no PR da Luá - T19A para não precisar detalhar todo o objeto.\n  trackInfo: PropTypes.objectOf(PropTypes.any).isRequired,\n  onFavoriteChange: PropTypes.func,\n};\n\nexport default MusicCard;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport getMusics from '../services/musicsAPI';\nimport MusicCard from '../components/MusicCard';\nimport Loading from '../components/Loading';\nimport './Album.css';\n\nclass Album extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      loading: true,\n      tracks: [],\n    };\n  }\n\n  componentDidMount = async () => {\n    const { match: { params: { id } } } = this.props;\n    const tracks = await getMusics(id);\n    this.setState({ loading: false, tracks });\n  }\n\n  render() {\n    const { tracks, loading } = this.state;\n    return (\n      <div data-testid=\"page-album\">\n        <Header />\n        {loading\n          ? <Loading />\n          : (\n            <>\n              <section className=\"artist-album-info\">\n                <span data-testid=\"artist-name\">{tracks[0].artistName}</span>\n                <span data-testid=\"album-name\">{tracks[0].collectionName}</span>\n              </section>\n              <section className=\"music-container\">\n                {tracks.map((track, index) => (\n                  // Ajuda Eduardo Muchak - T19A com a lógica do index > 0\n                  index > 0\n                  && <MusicCard\n                    key={ track.trackId }\n                    trackName={ track.trackName }\n                    previewUrl={ track.previewUrl }\n                    trackId={ track.trackId }\n                    trackInfo={ track }\n                  />\n                ))}\n              </section>\n            </>\n          )}\n        <Footer />\n      </div>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default Album;\n","import React, { Component } from 'react';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport MusicCard from '../components/MusicCard';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\n\nclass Favorites extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      favoritesSongsList: [],\n    };\n  }\n\n  componentDidMount = () => {\n    this.handleUpdate();\n  }\n\n  handleUpdate = async () => {\n    this.setState({ loading: true });\n    const favoritesSongsList = await getFavoriteSongs();\n    this.setState({ loading: false, favoritesSongsList });\n  }\n\n  render() {\n    const { loading, favoritesSongsList } = this.state;\n    return (\n      <div data-testid=\"page-favorites\">\n        <Header />\n        {loading\n          ? <Loading />\n          : (\n            <section className=\"music-container\">\n              {favoritesSongsList.map((song) => (\n                <MusicCard\n                  key={ song.trackId }\n                  trackName={ song.trackName }\n                  previewUrl={ song.previewUrl }\n                  trackId={ song.trackId }\n                  trackInfo={ song }\n                  onFavoriteChange={ this.handleUpdate }\n                />\n              ))}\n            </section>)}\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default Favorites;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport { getUser } from '../services/userAPI';\nimport './Profile.css';\n\nclass Profile extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user: {},\n      loading: false,\n    };\n  }\n\n  componentDidMount = async () => {\n    this.setState({ loading: true });\n    const user = await getUser();\n    this.setState({ user, loading: false });\n  }\n\n  render() {\n    const { user, loading } = this.state;\n    return (\n      <div data-testid=\"page-profile\">\n        <Header />\n        {loading\n          ? <Loading />\n          : (\n            <section className=\"user-container\">\n              <div className=\"user-image\">\n                <img\n                  src={ user.image }\n                  data-testid=\"profile-image\"\n                  alt={ `Foto de ${user.name}` }\n                />\n              </div>\n              <div className=\"user-info\">\n                <h4>Name</h4>\n                <span>{ user.name }</span>\n                <h4>Email</h4>\n                <span>{user.email}</span>\n                <h4>About</h4>\n                <span>{user.description}</span>\n                <Link\n                  to=\"/profile/edit\"\n                  className=\"edit-profile-link\"\n                >\n                  Edit profile\n                </Link>\n              </div>\n            </section>\n          )}\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport { getUser, updateUser } from '../services/userAPI';\nimport './ProfileEdit.css';\n\nclass ProfileEdit extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user: {},\n      loading: false,\n      isButtonEnabled: false,\n      isUpdated: false,\n    };\n  }\n\n  componentDidMount = async () => {\n    this.setState({ loading: true });\n    const user = await getUser();\n    this.setState({ user, loading: false });\n    this.handleVerification();\n  }\n\n  handleChange = ({ target }) => {\n    this.setState((prevState) => ({\n      user: {\n        ...prevState.user,\n        [target.name]: target.value,\n      },\n    }), this.handleVerification);\n  }\n\n  handleVerification = () => {\n    const { user } = this.state;\n    const isUserNameEmpty = user.name.length <= 0;\n    const isUserEmailEmpty = user.email.length <= 0;\n    const isUserDescriptionEmpty = user.description.length <= 0;\n    const isUserImageEmpty = user.image.length <= 0;\n    this.setState({ isButtonEnabled:\n        (!isUserNameEmpty\n          && !isUserEmailEmpty\n          && !isUserDescriptionEmpty\n          && !isUserImageEmpty) });\n  }\n\n  handleClick = (event) => {\n    event.preventDefault();\n    const { user } = this.state;\n    this.setState({ loading: true }, async () => {\n      await updateUser(user);\n      this.setState({ isUpdated: true, loading: false });\n    });\n  }\n\n  render() {\n    const { loading, user, isButtonEnabled, isUpdated } = this.state;\n    return (\n      <div data-testid=\"page-profile-edit\">\n        <Header />\n        <div>\n          {loading\n            ? <Loading />\n            : (\n              <form className=\"edit-profile-form\">\n                <label htmlFor=\"name\" className=\"edit-profile-label\">\n                  Name\n                  <input\n                    data-testid=\"edit-input-name\"\n                    name=\"name\"\n                    className=\"edit-profile-input\"\n                    onChange={ this.handleChange }\n                    value={ user.name }\n                  />\n                </label>\n                <label htmlFor=\"email\" className=\"edit-profile-label\">\n                  Email\n                  <input\n                    data-testid=\"edit-input-email\"\n                    name=\"email\"\n                    className=\"edit-profile-input\"\n                    onChange={ this.handleChange }\n                    value={ user.email }\n                  />\n                </label>\n                <label htmlFor=\"description\" className=\"edit-profile-label\">\n                  About\n                  <input\n                    data-testid=\"edit-input-description\"\n                    name=\"description\"\n                    className=\"edit-profile-input\"\n                    onChange={ this.handleChange }\n                    value={ user.description }\n                  />\n                </label>\n                <label htmlFor=\"image\" className=\"edit-profile-label\">\n                  URL to image\n                  <input\n                    data-testid=\"edit-input-image\"\n                    name=\"image\"\n                    className=\"edit-profile-input\"\n                    onChange={ this.handleChange }\n                    value={ user.image }\n                  />\n                </label>\n                <button\n                  type=\"submit\"\n                  data-testid=\"edit-button-save\"\n                  className=\"edit-button-save\"\n                  disabled={ !isButtonEnabled }\n                  onClick={ this.handleClick }\n                >\n                  Update\n                </button>\n              </form>\n            )}\n        </div>\n        <Footer />\n        { isUpdated && <Redirect to=\"/profile\" /> }\n      </div>\n    );\n  }\n}\n\nexport default ProfileEdit;\n","import React, { Component } from 'react';\nimport './NotFound.css';\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <section data-testid=\"page-not-found\" className=\"not-found-container\">\n        <h1 className=\"not-found-error\">404</h1>\n        <h2 className=\"not-found-title\">Not Found</h2>\n        <p className=\"not-found-message\">Woops. Looks like this page does not exist.</p>\n      </section>\n    );\n  }\n}\n\nexport default NotFound;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Search from './pages/Search';\nimport Album from './pages/Album';\nimport Favorites from './pages/Favorites';\nimport Profile from './pages/Profile';\nimport ProfileEdit from './pages/ProfileEdit';\nimport NotFound from './pages/NotFound';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <main>\n        <Switch>\n          <Route path=\"/search\" component={ Search } />\n          <Route path=\"/album/:id\" component={ Album } />\n          <Route path=\"/favorites\" component={ Favorites } />\n          <Route path=\"/profile/edit\" component={ ProfileEdit } />\n          <Route path=\"/profile\" component={ Profile } />\n          <Route path=\"/\" component={ Login } exact />\n          <Route path=\"/*\" component={ NotFound } />\n        </Switch>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}